name: nodejs
visible_name: JavaScript (nodejs 0.12 Harmony)
version: "0.12"
apparmor_profile: straitjacket/interpreter/node
filename: source.js
docker_image: straitjacket/lang-nodejs

file_extensions:
  - js
  - sjs
  - ssjs
  - javascript

tests:
  template:
    source: |
      processLine = function(line) {
        // Process each line of input here
        return line;
      };

      readStdin = callback => {
        var data = "";
        process.stdin.resume();
        process.stdin.setEncoding('utf8');
        process.stdin.on('data', function(chunk) {
          return data += chunk.toString();
        });
        return process.stdin.on('end', function() {
          var lines = data.split(/\n/);
          lines.pop(); // ignore final newline
          return callback(lines);
        });
      };

      readStdin(function(lines) {
        for (var i in lines) {
          console.log(processLine(lines[i]));
        }
      });
    stdin:  "1\n2\n3\n"
    stdout: "\\A1\n2\n3\n\\z"
    stderr: "\\A\\z"
    exitstatus: 0

  simple:
    source: |
      readStdin = callback => {
        var data = "";
        process.stdin.resume();
        process.stdin.setEncoding('utf8');
        process.stdin.on('data', function(chunk) {
          return data += chunk.toString();
        });
        return process.stdin.on('end', function() {
          var lines = data.split(/\n/);
          lines.pop(); // ignore final newline
          return callback(lines);
        });
      };

      processLine = function(line) {
        number = +line;
        return number * 2;
      };

      readStdin(function(lines) {
        for (var i in lines) {
          console.log(processLine(lines[i]));
        }
      });
    stdin:  "1\n2\n3\n"
    stdout: "\\A2\n4\n6\n\\z"
    stderr: "\\A\\z"
    exitstatus: 0

  apparmor:
    source: |
      var fs = require('fs');
      fs.readFile('/etc/hosts', (err, data) => {
        if (err) throw err;
        console.log(data.toString());
      });
    stdout:
    stderr: "Error: EACCES, open '/etc/hosts'"
    exitstatus: 1

  rlimit:
    source: |
      var buffer1 = new Buffer(536870912);
      var buffer2 = new Buffer(536870912);
      var buffer3 = new Buffer(536870912);
      console.log(buffer1.length + buffer2.length + buffer3.length);
    stdout:
    stderr: Out Of Memory
    exitstatus: 139
